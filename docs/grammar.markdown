# SQL Grammar

This is the grammar used to parse SQL strings into trees of cfrel.nodes.Node sub-classes. The code for each of these is available in the cfrel.Parser class, which acts as a recursive descent parser.

## Non-Terminals

### Implemented

* OPT-EXRS
	* EXPRS?

* EXPRS
	* EXPR COMMA EXPRS
	* EXPR

* EXPR
	* OR-EXPR

* OR-EXPR
	* AND-EXPR OR OR-EXPR
	* AND-EXPR

* AND-EXPR
	* COMP AND AND-EXPR
	* COMP

* COMP
	* NOT-EXPR IS-NOT NOT-EXPR
	* NOT-EXPR IS NOT-EXPR
	* NOT-EXPR BETWEEN TERM AND TERM
	* NOT-EXPR NOT BETWEEN TERM AND TERM
	* NOT-EXPR IN LPAREN EXPRS RPAREN
	* NOT-EXPR NOT IN LPAREN EXPRS RPAREN
	* NOT-EXPR COMPOP ALL LPAREN SELECT-STMT RPAREN
	* NOT-EXPR COMPOP ANY-OP LPAREN SELECT-STMT RPAREN
	* NOT-EXPR COMPOP EXPR
	* NOT-EXPR
	
* NOT-EXPR
	* NOT COMP-EXPR
	* COMP-EXPR

* ADD-EXPR
	* MUL-EXPR ADDOP ADD-EXPR
	* MUL-EXPR

* MUL-EXPR
	* TERM MULOP MUL-EXPR
	* TERM

* TERM
	* NUMBER
	* STRING
	* NULL
	* WILDCARD
	* PARAM
	* CAST-EXPR
	* UNARY-OP TERM
	* UNARY-OP LPAREN EXPR RPAREN
	* LPAREN EXPR RPAREN
	* FUNC
	* IDENTIFIER

* FUNC
	* IDENTIFIER LPAREN DISTINCT OPT-EXPRS RPAREN
	* IDENTIFIER LPAREN OPT-EXPRS RPAREN

* CAST-EXPR
	* CAST LPAREN EXPR AS TYPE-NAME RPAREN

* TYPE-NAME
	* IDENTIFIER
	* IDENTIFIER LPAREN NUMBER RPAREN
	* IDENTIFIER LPAREN NUMBER COMMA NUMBER RPAREN
	
* RESULT-COLUMNS
	* RESULT-COLUMN COMMA RESULT-COLUMNS
	* RESULT-COLUMN

* RESULT-COLUMN
	* WILDCARD
	* IDENTIFIER DOT WILDCARD
	* EXPR AS IDENTIFIER

* ORDER-TERM
	* EXPR COLLATE IDENTIFIER ORDER-OP
	* EXPR COLLATE IDENTIFIER
	* EXPR ORDER-OP
	* EXPR
	
* CASE-STMT
	* CASE EXPR WHEN-EXPRS ELSE-EXPR END
	
* WHEN-EXPRS
	* WHEN EXPR THEN EXPR OPT-WHEN-EXPRS
	* WHEN EXPR THEN EXPR ?

* ELSE-EXPR
	* ELSE EXPR ?
	
### Not Implemented
	
* SELECT-STMT
	* SELECT-CORES OPT-ORDER-CLAUSE OPT-LIMIT-CLAUSE
	
* SELECT-CORES
	* SELECT-CORE COMPOUND-OP SELECT-CORES
	* SELECT-CORE
	
* SELECT-CORE
	* SELECT SELECT-FLAGS RESULT-COLUMNS OPT-FROM-CLAUSE OPT-WHERE-CLAUSE OPT-GROUP-CLAUSE
	
* SELECT-FLAGS
	* DISTINCT
	* ALL
	* TOP NUMBER
	
* COMPOUND-OP
	* UNION ALL
	* UNION
	* INTERSECT
	* EXCEPT

* OPT-FROM-CLAUSE
	* FROM JOIN-SOURCE